/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MemoryTree, MemoryTreeInterface } from "../MemoryTree";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ASTOPaymentFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
    ],
    name: "AccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeRequestClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeRequestRevoked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "slaTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentTimestamp",
        type: "uint64",
      },
    ],
    name: "ComputeSLANotReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "availableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "address",
        name: "expectedCaller",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualCaller",
        type: "address",
      },
    ],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComputeIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidComputeRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
    ],
    name: "InvalidDisbursement",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
    ],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "InvalidRegistryIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "requiredAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "PaymentError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "brainAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "brainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nodeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
    ],
    name: "MemoryNodeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "brainAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "brainId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "storageURI",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "addMemoryTree",
    outputs: [
      {
        internalType: "uint256",
        name: "treeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nodeId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parentNodeId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "nodeHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "storageURI",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "addNode",
    outputs: [
      {
        internalType: "uint256",
        name: "nodeId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMemoryNode",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "memoryTreeId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "children",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "storageURI",
            type: "string",
          },
        ],
        internalType: "struct IMemoryTree.MemoryNode",
        name: "node",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMemoryTreeDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "brainAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "brainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rootNode",
            type: "uint256",
          },
        ],
        internalType: "struct IMemoryTree.MemoryTreeDetails",
        name: "details",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class MemoryTree__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MemoryTree> {
    return super.deploy(overrides || {}) as Promise<MemoryTree>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MemoryTree {
    return super.attach(address) as MemoryTree;
  }
  connect(signer: Signer): MemoryTree__factory {
    return super.connect(signer) as MemoryTree__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MemoryTreeInterface {
    return new utils.Interface(_abi) as MemoryTreeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MemoryTree {
    return new Contract(address, _abi, signerOrProvider) as MemoryTree;
  }
}
