/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockedERC20, MockedERC20Interface } from "../MockedERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "decimal",
        type: "uint8",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURIChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052604051620012ac380380620012ac833981016040819052620000269162000220565b8484600362000036838262000360565b50600462000045828262000360565b50506005805460ff191660ff8416179055506200006383836200006e565b505050505062000454565b6001600160a01b038216620000c95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000dd91906200042c565b90915550506001600160a01b038216600090815260208190526040812080548392906200010c9084906200042c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018357600080fd5b81516001600160401b0380821115620001a057620001a06200015b565b604051601f8301601f19908116603f01168101908282118183101715620001cb57620001cb6200015b565b81604052838152602092508683858801011115620001e857600080fd5b600091505b838210156200020c5785820183015181830184015290820190620001ed565b600093810190920192909252949350505050565b600080600080600060a086880312156200023957600080fd5b85516001600160401b03808211156200025157600080fd5b6200025f89838a0162000171565b965060208801519150808211156200027657600080fd5b50620002858882890162000171565b604088015190955090506001600160a01b0381168114620002a557600080fd5b60608701516080880151919450925060ff81168114620002c457600080fd5b809150509295509295909350565b600181811c90821680620002e757607f821691505b6020821081036200030857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015657600081815260208120601f850160051c81016020861015620003375750805b601f850160051c820191505b81811015620003585782815560010162000343565b505050505050565b81516001600160401b038111156200037c576200037c6200015b565b62000394816200038d8454620002d2565b846200030e565b602080601f831160018114620003cc5760008415620003b35750858301515b600019600386901b1c1916600185901b17855562000358565b600085815260208120601f198616915b82811015620003fd57888601518255948401946001909101908401620003dc565b50858210156200041c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200044e57634e487b7160e01b600052601160045260246000fd5b92915050565b610e4880620004646000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806355f804b3116100975780639dc29fac116100665780639dc29fac14610206578063a457c2d714610219578063a9059cbb1461022c578063dd62ed3e1461023f57600080fd5b806355f804b3146101ba5780636c0360eb146101cd57806370a08231146101d557806395d89b41146101fe57600080fd5b8063313ce567116100d3578063313ce5671461016b57806332424aa314610185578063395093511461019257806340c10f19146101a557600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610252565b60405161011a9190610ab1565b60405180910390f35b610136610131366004610b1b565b6102e4565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b45565b6102fe565b610173610322565b60405160ff909116815260200161011a565b6005546101739060ff1681565b6101366101a0366004610b1b565b61033f565b6101b86101b3366004610b1b565b610361565b005b6101b86101c8366004610b81565b61036f565b61010d6103ba565b61014a6101e3366004610bf3565b6001600160a01b031660009081526020819052604090205490565b61010d610448565b6101b8610214366004610b1b565b610457565b610136610227366004610b1b565b610461565b61013661023a366004610b1b565b6104e1565b61014a61024d366004610c15565b6104ef565b60606003805461026190610c48565b80601f016020809104026020016040519081016040528092919081815260200182805461028d90610c48565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f281858561051a565b60019150505b92915050565b60003361030c85828561063f565b6103178585856106b9565b506001949350505050565b60055460009060ff166103355750601290565b5060055460ff1690565b6000336102f281858561035283836104ef565b61035c9190610c98565b61051a565b61036b8282610887565b5050565b600661037c828483610d0f565b507f5411e8ebf1636d9e83d5fc4900bf80cbac82e8790da2a4c94db4895e889eedf682826040516103ae929190610dd0565b60405180910390a15050565b600680546103c790610c48565b80601f01602080910402602001604051908101604052809291908181526020018280546103f390610c48565b80156104405780601f1061041557610100808354040283529160200191610440565b820191906000526020600020905b81548152906001019060200180831161042357829003601f168201915b505050505081565b60606004805461026190610c48565b61036b8282610966565b6000338161046f82866104ef565b9050838110156104d45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610317828686840361051a565b6000336102f28185856106b9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661057c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104cb565b6001600160a01b0382166105dd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104cb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061064b84846104ef565b905060001981146106b357818110156106a65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104cb565b6106b3848484840361051a565b50505050565b6001600160a01b03831661071d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104cb565b6001600160a01b03821661077f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104cb565b6001600160a01b038316600090815260208190526040902054818110156107f75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104cb565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061082e908490610c98565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087a91815260200190565b60405180910390a36106b3565b6001600160a01b0382166108dd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104cb565b80600260008282546108ef9190610c98565b90915550506001600160a01b0382166000908152602081905260408120805483929061091c908490610c98565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109c65760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104cb565b6001600160a01b03821660009081526020819052604090205481811015610a3a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104cb565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a69908490610dff565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610632565b505050565b600060208083528351808285015260005b81811015610ade57858101830151858201604001528201610ac2565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b1657600080fd5b919050565b60008060408385031215610b2e57600080fd5b610b3783610aff565b946020939093013593505050565b600080600060608486031215610b5a57600080fd5b610b6384610aff565b9250610b7160208501610aff565b9150604084013590509250925092565b60008060208385031215610b9457600080fd5b823567ffffffffffffffff80821115610bac57600080fd5b818501915085601f830112610bc057600080fd5b813581811115610bcf57600080fd5b866020828501011115610be157600080fd5b60209290920196919550909350505050565b600060208284031215610c0557600080fd5b610c0e82610aff565b9392505050565b60008060408385031215610c2857600080fd5b610c3183610aff565b9150610c3f60208401610aff565b90509250929050565b600181811c90821680610c5c57607f821691505b602082108103610c7c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156102f8576102f8610c82565b634e487b7160e01b600052604160045260246000fd5b601f821115610aac57600081815260208120601f850160051c81016020861015610ce85750805b601f850160051c820191505b81811015610d0757828155600101610cf4565b505050505050565b67ffffffffffffffff831115610d2757610d27610cab565b610d3b83610d358354610c48565b83610cc1565b6000601f841160018114610d6f5760008515610d575750838201355b600019600387901b1c1916600186901b178355610dc9565b600083815260209020601f19861690835b82811015610da05786850135825560209485019460019092019101610d80565b5086821015610dbd5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b818103818111156102f8576102f8610c8256fea2646970667358221220e25c8a2b169d5d4e12fb6c8592091c19a415cbd29255cd7472b07f4ffb3c097064736f6c63430008110033";

export class MockedERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    initialAccount: string,
    initialBalance: BigNumberish,
    decimal: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<MockedERC20> {
    return super.deploy(
      name,
      symbol,
      initialAccount,
      initialBalance,
      decimal,
      overrides || {}
    ) as Promise<MockedERC20>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialAccount: string,
    initialBalance: BigNumberish,
    decimal: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialAccount,
      initialBalance,
      decimal,
      overrides || {}
    );
  }
  attach(address: string): MockedERC20 {
    return super.attach(address) as MockedERC20;
  }
  connect(signer: Signer): MockedERC20__factory {
    return super.connect(signer) as MockedERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockedERC20Interface {
    return new utils.Interface(_abi) as MockedERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockedERC20 {
    return new Contract(address, _abi, signerOrProvider) as MockedERC20;
  }
}
