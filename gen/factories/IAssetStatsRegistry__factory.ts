/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAssetStatsRegistry,
  IAssetStatsRegistryInterface,
} from "../IAssetStatsRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "statsAddress",
        type: "address",
      },
    ],
    name: "RegistryEntryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "statsAddress",
        type: "address",
      },
    ],
    name: "RegistryEntryRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "deregisterStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "getRegistryEntry",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "statsAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct IAssetStatsRegistry.RegistryEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listActiveStatsAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "statsAddress",
        type: "address",
      },
    ],
    name: "registerStats",
    outputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAssetStatsRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IAssetStatsRegistryInterface {
    return new utils.Interface(_abi) as IAssetStatsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAssetStatsRegistry {
    return new Contract(address, _abi, signerOrProvider) as IAssetStatsRegistry;
  }
}
