/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetStatsRegistry,
  AssetStatsRegistryInterface,
} from "../AssetStatsRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ASTOPaymentFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
    ],
    name: "AccessError",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeRequestClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "ComputeRequestRevoked",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "slaTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentTimestamp",
        type: "uint64",
      },
    ],
    name: "ComputeSLANotReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "availableAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestedAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "address",
        name: "expectedCaller",
        type: "address",
      },
      {
        internalType: "address",
        name: "actualCaller",
        type: "address",
      },
    ],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidComputeIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "InvalidComputeRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
    ],
    name: "InvalidDisbursement",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
    ],
    name: "InvalidInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "InvalidRegistryIndex",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "errMsg",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "requiredAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedAmount",
        type: "uint256",
      },
    ],
    name: "PaymentError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "statsAddress",
        type: "address",
      },
    ],
    name: "RegistryEntryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "statsAddress",
        type: "address",
      },
    ],
    name: "RegistryEntryRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "deregisterStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "getRegistryEntry",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "statsAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct IAssetStatsRegistry.RegistryEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listActiveStatsAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "statsAddress",
        type: "address",
      },
    ],
    name: "registerStats",
    outputs: [
      {
        internalType: "uint256",
        name: "entryId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301ffc9a7146100675780633d93db721461008f57806359000342146100c95780637ff7cc35146100de57806382afd23b146100ff578063dc334c5a1461012a575b600080fd5b61007a610075366004610512565b61013f565b60405190151581526020015b60405180910390f35b6100a261009d366004610543565b610176565b6040805182516001600160a01b039081168252602093840151169281019290925201610086565b6100dc6100d7366004610543565b6101eb565b005b6100f16100ec36600461055c565b61030b565b604051908152602001610086565b61007a61010d366004610543565b6000908152600160205260409020546001600160a01b0316151590565b610132610427565b6040516100869190610585565b60006001600160e01b0319821663440743c360e01b148061017057506301ffc9a760e01b6001600160e01b03198316145b92915050565b604080518082019091526000808252602082015250600081815260016020818152604092839020835180850190945280546001600160a01b039081168086529190930154909216908301526101e65760405163023897e160e61b8152600481018390526024015b60405180910390fd5b919050565b6000818152600160208190526040909120908101546001600160a01b0316331461026b57604080518082018252601781527f4d7573742062652063616c6c6564206279206f776e657200000000000000000060208201526001830154915163b4f0c18560e01b81526101dd926001600160a01b03169033906004016105d2565b8054604080518481526001600160a01b0390921660208301527f988bd49d61a20da4cc48db451b986d81f1e2f8c8d0c9102b3d0e278104765235910160405180910390a1506000818152600160208190526040822080546001600160a01b03199081168255908201805490911690556002805491820181559091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b600254600090801561036d576002610324600183610650565b8154811061033457610334610663565b90600052602060002001549150600280548061035257610352610679565b60019003818190600052602060002001600090559055610382565b6000805492508061037d8461068f565b909155505b6040805180820182526001600160a01b0380861682523360208084019182526000878152600191829052859020935184549084166001600160a01b0319918216178555915193018054939092169216919091179055517fe23bdb6b33f385170719cdc674fd7276ac9e0dbda11d58d20f7a8bc9158600799061041990849086909182526001600160a01b0316602082015260400190565b60405180910390a150919050565b60025460005460609161043991610650565b67ffffffffffffffff811115610451576104516106a8565b60405190808252806020026020018201604052801561047a578160200160208202803683370190505b5090506000805b60005481101561050d576000818152600160205260409020546001600160a01b0316156104fb5760008181526001602052604090205483516001600160a01b03909116908490849081106104d7576104d7610663565b6001600160a01b03909216602092830291909101909101526104f88261068f565b91505b806105058161068f565b915050610481565b505090565b60006020828403121561052457600080fd5b81356001600160e01b03198116811461053c57600080fd5b9392505050565b60006020828403121561055557600080fd5b5035919050565b60006020828403121561056e57600080fd5b81356001600160a01b038116811461053c57600080fd5b6020808252825182820181905260009190848201906040850190845b818110156105c65783516001600160a01b0316835292840192918401916001016105a1565b50909695505050505050565b606081526000845180606084015260005b8181101561060057602081880181015160808684010152016105e3565b50600060808285018101919091526001600160a01b03958616602085015293909416604083015250601f909201601f191690910101919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101705761017061063a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000600182016106a1576106a161063a565b5060010190565b634e487b7160e01b600052604160045260246000fdfea264697066735822122013eb4b503684d5ebb2c82d02309156a3feac0afafda2d554643b716f8a14cbc064736f6c63430008110033";

export class AssetStatsRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetStatsRegistry> {
    return super.deploy(overrides || {}) as Promise<AssetStatsRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssetStatsRegistry {
    return super.attach(address) as AssetStatsRegistry;
  }
  connect(signer: Signer): AssetStatsRegistry__factory {
    return super.connect(signer) as AssetStatsRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetStatsRegistryInterface {
    return new utils.Interface(_abi) as AssetStatsRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetStatsRegistry {
    return new Contract(address, _abi, signerOrProvider) as AssetStatsRegistry;
  }
}
