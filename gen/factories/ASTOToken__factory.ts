/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ASTOToken, ASTOTokenInterface } from "../ASTOToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        internalType: "address",
        name: "finance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aragonAgent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aragonFinance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001162380380620011628339810160408190526200003491620000c3565b6040518060600160405280602381526020016200113f602391396040805180820190915260048152634153544f60e01b60208201526003620000778382620001a0565b506004620000868282620001a0565b50506001600555506001600160a01b039182166080521660a0526200026c565b80516001600160a01b0381168114620000be57600080fd5b919050565b60008060408385031215620000d757600080fd5b620000e283620000a6565b9150620000f260208401620000a6565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012657607f821691505b6020821081036200014757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019b57600081815260208120601f850160051c81016020861015620001765750805b601f850160051c820191505b81811015620001975782815560010162000182565b5050505b505050565b81516001600160401b03811115620001bc57620001bc620000fb565b620001d481620001cd845462000111565b846200014d565b602080601f8311600181146200020c5760008415620001f35750858301515b600019600386901b1c1916600185901b17855562000197565b600085815260208120601f198616915b828110156200023d578886015182559484019460019091019084016200021c565b50858210156200025c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610e98620002a7600039600081816101a70152818161050f01526105da01526000818161022201526104260152610e986000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a0712d6811610066578063a0712d681461024c578063a457c2d71461025f578063a9059cbb14610272578063dd62ed3e1461028557600080fd5b806370a08231146101e157806379cc67901461020a5780637c73f3431461021d57806395d89b411461024457600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806342966c681461018d5780634ec87100146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610298565b60405161011a9190610c8c565b60405180910390f35b610136610131366004610cf6565b61032a565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610d20565b610344565b6040516012815260200161011a565b610136610188366004610cf6565b610368565b6101a061019b366004610d5c565b61038a565b005b6101c97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161011a565b61014a6101ef366004610d75565b6001600160a01b031660009081526020819052604090205490565b6101a0610218366004610cf6565b610397565b6101c97f000000000000000000000000000000000000000000000000000000000000000081565b61010d6103b0565b6101a061025a366004610d5c565b6103bf565b61013661026d366004610cf6565b610646565b610136610280366004610cf6565b6106c1565b61014a610293366004610d97565b6106cf565b6060600380546102a790610dca565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610dca565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b6000336103388185856106fa565b60019150505b92915050565b60003361035285828561081f565b61035d858585610899565b506001949350505050565b60003361033881858561037b83836106cf565b6103859190610e1a565b6106fa565b6103943382610a67565b50565b6103a282338361081f565b6103ac8282610a67565b5050565b6060600480546102a790610dca565b6002600554036104165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600555336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104885760405162461bcd60e51b81526020600482015260126024820152715065726d697373696f6e2064656e6965642160701b604482015260640161040d565b6b07b3ffa2f5d464eb500000008161049f60025490565b6104a99190610e1a565b11156104ee5760405162461bcd60e51b81526020600482015260146024820152734d617820737570706c792065786365656465642160601b604482015260640161040d565b6104f83082610bad565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052309063095ea7b3906044016020604051808303816000875af1158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190610e2d565b50604051635ff03ed360e11b81523060048201526024810182905260606044820152601960648201527f496e697469616c6973696e6720244153544f20737570706c790000000000000060848201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfe07da69060a401600060405180830381600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b50506001600555505050565b6000338161065482866106cf565b9050838110156106b45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161040d565b61035d82868684036106fa565b600033610338818585610899565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03831661075c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161040d565b6001600160a01b0382166107bd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161040d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061082b84846106cf565b9050600019811461089357818110156108865760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161040d565b61089384848484036106fa565b50505050565b6001600160a01b0383166108fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161040d565b6001600160a01b03821661095f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161040d565b6001600160a01b038316600090815260208190526040902054818110156109d75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161040d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a0e908490610e1a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5a91815260200190565b60405180910390a3610893565b6001600160a01b038216610ac75760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161040d565b6001600160a01b03821660009081526020819052604090205481811015610b3b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161040d565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b6a908490610e4f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610812565b6001600160a01b038216610c035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161040d565b8060026000828254610c159190610e1a565b90915550506001600160a01b03821660009081526020819052604081208054839290610c42908490610e1a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b81811015610cb957858101830151858201604001528201610c9d565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cf157600080fd5b919050565b60008060408385031215610d0957600080fd5b610d1283610cda565b946020939093013593505050565b600080600060608486031215610d3557600080fd5b610d3e84610cda565b9250610d4c60208501610cda565b9150604084013590509250925092565b600060208284031215610d6e57600080fd5b5035919050565b600060208284031215610d8757600080fd5b610d9082610cda565b9392505050565b60008060408385031215610daa57600080fd5b610db383610cda565b9150610dc160208401610cda565b90509250929050565b600181811c90821680610dde57607f821691505b602082108103610dfe57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561033e5761033e610e04565b600060208284031215610e3f57600080fd5b81518015158114610d9057600080fd5b8181038181111561033e5761033e610e0456fea2646970667358221220f3159c474d61ae1892e11b6b31fe38e1bb1b691b9ddfc02ba26e829ea6e499b564736f6c63430008110033416c7465726564205374617465204d616368696e65205574696c69747920546f6b656e";

export class ASTOToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    agent: string,
    finance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ASTOToken> {
    return super.deploy(agent, finance, overrides || {}) as Promise<ASTOToken>;
  }
  getDeployTransaction(
    agent: string,
    finance: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(agent, finance, overrides || {});
  }
  attach(address: string): ASTOToken {
    return super.attach(address) as ASTOToken;
  }
  connect(signer: Signer): ASTOToken__factory {
    return super.connect(signer) as ASTOToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ASTOTokenInterface {
    return new utils.Interface(_abi) as ASTOTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ASTOToken {
    return new Contract(address, _abi, signerOrProvider) as ASTOToken;
  }
}
